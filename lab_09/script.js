const cards = [
    'üê∂', 'üê∂', 
    'üê±', 'üê±',
    'üê∞', 'üê∞',
    'üêª', 'üêª',
    'üêº', 'üêº',
    'ü¶ä', 'ü¶ä',
    'üê∑', 'üê∑',
    'üê∏', 'üê∏',
    'üêµ', 'üêµ'
];

let firstCard = null;
let secondCard = null;
let lockBoard = false;
let stepCount = 0;

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–º—ñ—à—É–≤–∞–Ω–Ω—è –∫–∞—Ä—Ç
function shuffle(array) {
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
    }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ—à–∫–∏
function createBoard() {
    const gameBoard = document.querySelector('.game-board');
    gameBoard.innerHTML = '';
    const pairCount = parseInt(document.getElementById('pair-count').value);

    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –æ–±—Ä–∞–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞—Ä
    const selectedCards = cards.slice(0, pairCount * 2);
    shuffle(selectedCards);

    selectedCards.forEach(card => {
        const cardElement = document.createElement('div');
        cardElement.classList.add('card');
        cardElement.dataset.icon = card;
        cardElement.addEventListener('click', flipCard);
        gameBoard.appendChild(cardElement);
    });
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç—É –∫–∞—Ä—Ç–∫–∏
function flipCard() {
    if (lockBoard) return;
    if (this === firstCard) return;

    this.classList.add('flipped');
    this.textContent = this.dataset.icon;

    if (!firstCard) {
        firstCard = this;
        return;
    }

    secondCard = this;
    checkForMatch();
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–∞ –∑–±—ñ–≥
function checkForMatch() {
    stepCount++;
    document.getElementById('step-counter').textContent = `–ö—Ä–æ–∫–∏: ${stepCount}`;

    if (firstCard.dataset.icon === secondCard.dataset.icon) {
        disableCards();
    } else {
        unflipCards();
    }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –∫–∞—Ä—Ç
function disableCards() {
    firstCard.removeEventListener('click', flipCard);
    secondCard.removeEventListener('click', flipCard);
    resetBoard();
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤–µ—Ä—Ç–∞–Ω–Ω—è –∫–∞—Ä—Ç –Ω–∞–∑–∞–¥
function unflipCards() {
    lockBoard = true;
    setTimeout(() => {
        firstCard.classList.remove('flipped');
        secondCard.classList.remove('flipped');
        firstCard.textContent = '';
        secondCard.textContent = '';
        resetBoard();
    }, 1000);
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è –¥–æ—à–∫–∏
function resetBoard() {
    [firstCard, secondCard, lockBoard] = [null, null, false];
}

// –ü–æ–¥—ñ—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å–∫–∏–¥–∞–Ω–Ω—è
document.getElementById('reset-button').addEventListener('click', () => {
    createBoard();
    stepCount = 0;
    document.getElementById('step-counter').textContent = `–ö—Ä–æ–∫–∏: ${stepCount}`;
});

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥—Ä–∏
createBoard();